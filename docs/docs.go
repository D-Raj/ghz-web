// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2018-09-28 22:38:09.018113 -0300 ADT m=+4.242128570

package docs

import (
	"bytes"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "swagger": "2.0",
    "info": {
        "description": "ghz-web REST API",
        "title": "ghz-web API",
        "contact": {},
        "license": {},
        "version": "1.0"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/info": {
            "get": {
                "description": "Gets the server info",
                "produces": [
                    "application/json"
                ],
                "summary": "Gets the server info",
                "operationId": "get-info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.InfoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/projects/{pid}/tests/{tid}/runs/{rid}/details": {
            "get": {
                "description": "Lists the details for the specific run.",
                "produces": [
                    "application/json"
                ],
                "summary": "Lists the details for the specific run",
                "operationId": "get-list-details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Test ID",
                        "name": "tid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Run ID",
                        "name": "rid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "The page to view",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The sort order. Default: 'asc'",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "sring",
                        "description": "The property to sort by. Default: 'id'",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.DetailListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.Detail": {
            "type": "object",
            "required": [
                "latency"
            ],
            "properties": {
                "createdAt": {
                    "description": "The creation time",
                    "type": "string"
                },
                "deletedAt": {
                    "description": "The deleted time",
                    "type": "string"
                },
                "error": {
                    "description": "Error details",
                    "type": "string"
                },
                "id": {
                    "description": "The id",
                    "type": "integer",
                    "example": 123
                },
                "latency": {
                    "description": "Latency of the call",
                    "type": "number"
                },
                "runID": {
                    "description": "Run id",
                    "type": "integer",
                    "example": 321
                },
                "status": {
                    "description": "Status of the call",
                    "type": "string"
                },
                "timestamp": {
                    "description": "Timestamp for the detail",
                    "type": "string"
                },
                "updatedAt": {
                    "description": "The updated time",
                    "type": "string"
                }
            }
        },
        "api.DetailListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "List of detail objects",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Detail"
                    }
                },
                "total": {
                    "description": "The total number of items",
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "api.InfoResponse": {
            "type": "object",
            "properties": {
                "memoryInfo": {
                    "description": "Memory info",
                    "type": "object",
                    "$ref": "#/definitions/api.MemoryInfo"
                },
                "runtimeVersion": {
                    "description": "Go runtime version",
                    "type": "string"
                },
                "uptime": {
                    "description": "Uptime of the server",
                    "type": "string"
                },
                "version": {
                    "description": "Version of the application",
                    "type": "string"
                }
            }
        },
        "api.MemoryInfo": {
            "type": "object",
            "properties": {
                "allocated": {
                    "description": "Bytes of allocated heap objects.",
                    "type": "integer"
                },
                "frees": {
                    "description": "The cumulative count of heap objects freed.",
                    "type": "integer"
                },
                "lookups": {
                    "description": "The number of pointer lookups performed by the runtime.",
                    "type": "integer"
                },
                "mallocs": {
                    "description": "The cumulative count of heap objects allocated.\nThe number of live objects is Mallocs - Frees.",
                    "type": "integer"
                },
                "numGC": {
                    "description": "The number of completed GC cycles.",
                    "type": "integer"
                },
                "system": {
                    "description": "The total bytes of memory obtained from the OS.",
                    "type": "integer"
                },
                "totalAllocated": {
                    "description": "Cumulative bytes allocated for heap objects.",
                    "type": "integer"
                }
            }
        },
        "echo.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "internal": {
                    "type": "error"
                },
                "message": {
                    "type": "object"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo swaggerInfo

type s struct{}

func (s *s) ReadDoc() string {
	t, err := template.New("swagger_info").Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, SwaggerInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
